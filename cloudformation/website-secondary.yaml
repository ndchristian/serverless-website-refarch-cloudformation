# Copyright 2020 Nicholas Christian

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#    http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

AWSTemplateFormatVersion: '2010-09-09'
Description: Creates a regional public website bucket as a fallback for CloudFront and a regional logging bucket that replicates all logs to the primary logging bucket.
Parameters:
  PoC:
    Type: String
    Description: Person of Contact. Must be an email.
    AllowedPattern: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
  Application:
    Type: String
    Description: This value will be added to each resource name and tag in order to
      identify the application. Will also be used as a way to identify resources in
      code and IAM.
    AllowedPattern: (?=^.{3,63}$)(?!^(\d+\.)+\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)
  Environment:
    Type: String
    Description: The environment these resources are for. Value will be appended onto
      the end of the resource names.
  BusinessUnit:
    Type: String
    Description: The domain/subdomain/unit to assign this stack to.
  PrimaryLoggingBucket:
    Type: String
    Description: The name of the primary logging bucket used for this website.
Resources:
  LoggingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub '${Application}-secondary-logging-${AWS::Region}-${Environment}'
      LifecycleConfiguration:
        Rules:
          - Status: Enabled
            Transitions:
              - StorageClass: GLACIER
                TransitionInDays: 30
      VersioningConfiguration:
        Status: Enabled
      ReplicationConfiguration:
        Role: !GetAtt 'ReplicationRole.Arn'
        Rules:
          - Destination:
              Bucket: !Sub 'arn:aws:s3:::${PrimaryLoggingBucket}'
            Prefix: ''
            Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      AccessControl: LogDeliveryWrite
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: PoC
          Value: !Ref 'PoC'
        - Key: Name
          Value: !Sub '${Application}-secondary-${AWS::Region}-logging-${Environment}'
        - Key: Application
          Value: !Ref 'Application'
        - Key: Environment
          Value: !Ref 'Environment'
        - Key: Business Unit
          Value: !Ref 'BusinessUnit'
        - Key: ApplicationRole
          Value: operations
        - Key: Confidentiality
          Value: Non-Public
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${Application}-secondary-website-${AWS::Region}-${Environment}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Ref 'LoggingBucket'
        LogFilePrefix: !Sub 'AWS/S3/${Application}-website-node-${Environment}/${AWS::Region}/'
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: PoC
          Value: !Ref 'PoC'
        - Key: Name
          Value: !Sub '${Application}-secondary-website-${AWS::Region}-${Environment}'
        - Key: Application
          Value: !Ref 'Application'
        - Key: Environment
          Value: !Ref 'Environment'
        - Key: Business Unit
          Value: !Ref 'BusinessUnit'
        - Key: ApplicationRole
          Value: website
        - Key: Confidentiality
          Value: Public
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref 'WebsiteBucket'
      PolicyDocument:
        Statement:
          - Principal:
              CanonicalUser: !GetAtt 'CloudFrontOriginAccessIdentity.S3CanonicalUserId'
            Action: s3:GetObject
            Effect: Allow
            Resource: !Sub '${WebsiteBucket.Arn}/*'
            Sid: 0
          - Principal:
              CanonicalUser: !GetAtt 'CloudFrontOriginAccessIdentity.S3CanonicalUserId'
            Action: s3:ListBucket
            Effect: Allow
            Resource: !GetAtt 'WebsiteBucket.Arn'
            Sid: 1
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'Access identity for ${WebsiteBucket}'
  S3HealthCheck:
    Type: AWS::Route53::HealthCheck
    Properties:
      HealthCheckConfig:
        Port: 443
        Type: TCP
        FullyQualifiedDomainName: !GetAtt 'WebsiteBucket.DomainName'
        RequestInterval: 30
        FailureThreshold: 3
      HealthCheckTags:
        - Key: PoC
          Value: !Ref 'PoC'
        - Key: Name
          Value: !Sub '${Application}-s3-website-healthcheck-secondary-${Environment}'
        - Key: Application
          Value: !Ref 'Application'
        - Key: Environment
          Value: !Ref 'Environment'
        - Key: Business Unit
          Value: !Ref 'BusinessUnit'
        - Key: ApplicationRole
          Value: operations
        - Key: Confidentiality
          Value: Non-Public
  ReplicationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${Application}-replication-role-${AWS::Region}-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Principal:
              Service:
                - s3.amazonaws.com
            Action:
              - sts:AssumeRole
            Effect: Allow
      ManagedPolicyArns:
        - !Ref 'ReplicationPolicy'
  ReplicationPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: !Sub 'Replicates logs from ${Application}-secondary-${AWS::Region}-logging-${Environment}
        to ${PrimaryLoggingBucket}'
      ManagedPolicyName: !Sub '${Application}-repilication-policy-${AWS::Region}-${Environment}'
      Path: /
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:GetReplicationConfiguration
          - s3:ListBucket
          Resource: !Sub 'arn:aws:s3:::${Application}-secondary-logging-${AWS::Region}-${Environment}'
        - Effect: Allow
          Action:
          - s3:GetObjectVersion
          - s3:GetObjectVersionAcl
          - s3:GetObjectVersionTagging
          Resource: !Sub 'arn:aws:s3:::${Application}-secondary-logging-${AWS::Region}-${Environment}/*'
        - Effect: Allow
          Action:
          - s3:ReplicateObject
          - s3:ReplicateDelete
          - s3:ReplicateTags
          Resource: !Sub 'arn:aws:s3:::${PrimaryLoggingBucket}/*'
Outputs:
  WebsiteBucketARN:
    Description: The Bucket ARN that distibutes the website contents to each website
      node bucket.
    Value: !GetAtt 'WebsiteBucket.Arn'
    Export:
      Name: !Sub '${Application}-secondary-website-${Environment}'
  SecondaryCloudFrontAccessIdentity:
    Description: The idenity that allows access to the S3 bucket for Cloudfront
    Value: !Ref 'CloudFrontOriginAccessIdentity'
    Export:
      Name: !Sub '${Application}-secondary-CloudFrontIdentity-${Environment}'
  SecondaryBucketDomainName:
    Description: The S3 domain name of the bucket.
    Value: !GetAtt 'WebsiteBucket.DomainName'
    Export:
      Name: !Sub '${Application}-secondary-DomainName-${Environment}'